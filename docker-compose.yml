version: '3.1'

services:
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: ceats
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-script/postgres:/docker-entrypoint-initdb.d
    networks:
      - ceats_network

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8090:80"  # Port modifié pour pgAdmin
    depends_on:
      - postgres
    networks:
      - ceats_network

  # api-gateway:
  #   image: nginx
  #   restart: always
  #   ports:
  #     - "8080:80"  # NGINX exposé sur le port 8080 de l'hôte
  #   volumes:
  #     - ./nginx:/etc/nginx/conf.d  # Montage du dossier contenant la configuration de NGINX
  #   depends_on:
  #     - postgres

  auth-service:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
      args:
        - PORT=${PORT_SERVICE_AUTH}
    ports:
      - "${PORT_SERVICE_AUTH}:${PORT_SERVICE_AUTH}"
    environment:
      NODE_ENV: ${NODE_ENV}
      JWT_SECRET: ${JWT_SECRET}
      MONGODB_URI: ${MONGODB_URI}
    depends_on:
      - postgres
    volumes:
      - ./services/auth:/app
      - /app/node_modules
    networks:
      - ceats_network

  user-service:
    build:
      context: ./services/user
      dockerfile: Dockerfile
      args:
        - PORT=${PORT_SERVICE_USER}
    ports:
      - "${PORT_SERVICE_USER}:${PORT_SERVICE_USER}"
    environment:
      NODE_ENV: ${NODE_ENV}
      JWT_SECRET: ${JWT_SECRET}
      MONGODB_URI: ${MONGODB_URI}
    depends_on:
      - auth-service
      - postgres
    volumes:
      - ./services/user:/app
      - /app/node_modules
    networks:
      - ceats_network

  article-service:
    build:
      context: ./services/article
      dockerfile: Dockerfile
      args:
        - PORT=${PORT_SERVICE_ARTICLE}
    ports:
      - "${PORT_SERVICE_ARTICLE}:${PORT_SERVICE_ARTICLE}"
    environment:
      NODE_ENV: ${NODE_ENV}
      JWT_SECRET: ${JWT_SECRET}
      MONGODB_URI: ${MONGODB_URI}
    depends_on:
      - auth-service
      - postgres
    volumes:
      - ./services/article:/app
      - /app/node_modules
    networks:
      - ceats_network

volumes:
  postgres_data:

networks:
  ceats_network:
    external: true